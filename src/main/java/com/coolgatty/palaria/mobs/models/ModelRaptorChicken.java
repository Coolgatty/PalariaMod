package com.coolgatty.palaria.mobs.models;

import org.lwjgl.opengl.GL11;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelRaptorChicken extends ModelBase
{
  //fields
    ModelRenderer body;
    ModelRenderer neck;
    ModelRenderer mouth;
    ModelRenderer mouth2;
    ModelRenderer cresta;
    ModelRenderer leftleg;
    ModelRenderer rightleg;
    ModelRenderer leftwing;
    ModelRenderer rightwing;
    ModelRenderer headhair1;
    ModelRenderer headhair2;
    ModelRenderer headhair3;
    ModelRenderer headhair4;
    ModelRenderer headhair5;
    ModelRenderer backhair1;
    ModelRenderer backhair2;
    ModelRenderer backhair3;
    ModelRenderer backhair4;
    ModelRenderer backhair5;
    ModelRenderer leftwing1;
    ModelRenderer leftwing2;
    ModelRenderer leftwing3;
    ModelRenderer leftwing4;
    ModelRenderer rightwing1;
    ModelRenderer rightwing2;
    ModelRenderer rightwing3;
    ModelRenderer rightwing4;
    ModelRenderer tooth1;
    ModelRenderer tooth2;
    ModelRenderer tooth3;
    ModelRenderer tooth4;
  
  public ModelRaptorChicken()
  {
    textureWidth = 128;
    textureHeight = 128;
    
      body = new ModelRenderer(this, 40, 33);
      body.addBox(-3F, -3F, -4F, 6, 6, 10);
      body.setRotationPoint(0F, 15F, 1F);
      body.setTextureSize(128, 128);
      body.mirror = true;
      setRotation(body, 0F, 0F, 0F);
      neck = new ModelRenderer(this, 49, 15);
      neck.addBox(-2F, -9F, -2F, 4, 9, 3);
      neck.setRotationPoint(0F, 14F, -3F);
      neck.setTextureSize(128, 128);
      neck.mirror = true;
      setRotation(neck, 0F, 0F, 0F);
      mouth = new ModelRenderer(this, 65, 16);
      mouth.addBox(-2F, -7F, -4F, 4, 2, 2);
      mouth.setRotationPoint(0F, 14F, -3F);
      mouth.setTextureSize(128, 128);
      mouth.mirror = true;
      setRotation(mouth, 0F, 0F, 0F);
      mouth2 = new ModelRenderer(this, 65, 16);
      mouth2.addBox(-2F, -7F, -4F, 4, 2, 2);
      mouth2.setRotationPoint(0F, 14.01F, -3F);
      mouth2.setTextureSize(128, 128);
      mouth2.mirror = true;
      setRotation(mouth2, 0F, 0F, 0F);
      cresta = new ModelRenderer(this, 65, 25);
      cresta.addBox(-1F, -5F, -3F, 2, 2, 2);
      cresta.setRotationPoint(0F, 14F, -3F);
      cresta.setTextureSize(128, 128);
      cresta.mirror = true;
      setRotation(cresta, 0F, 0F, 0F);
      leftleg = new ModelRenderer(this, 60, 55);
      leftleg.addBox(-1F, 0F, -3F, 3, 6, 3);
      leftleg.setRotationPoint(1F, 18F, 4F);
      leftleg.setTextureSize(128, 128);
      leftleg.mirror = true;
      setRotation(leftleg, 0F, 0F, 0F);
      rightleg = new ModelRenderer(this, 40, 55);
      rightleg.addBox(-1F, 0F, -3F, 3, 6, 3);
      rightleg.setRotationPoint(-2F, 18F, 4F);
      rightleg.setTextureSize(128, 128);
      rightleg.mirror = true;
      setRotation(rightleg, 0F, 0F, 0F);
      leftwing = new ModelRenderer(this, 18, 34);
      leftwing.addBox(-1F, 0F, -4F, 1, 5, 8);
      leftwing.setRotationPoint(4F, 12F, 2F);
      leftwing.setTextureSize(128, 128);
      leftwing.mirror = true;
      setRotation(leftwing, 0F, 0F, 0F);
      rightwing = new ModelRenderer(this, 78, 34);
      rightwing.addBox(0F, 0F, -4F, 1, 5, 8);
      rightwing.setRotationPoint(-4F, 12F, 2F);
      rightwing.setTextureSize(128, 128);
      rightwing.mirror = true;
      setRotation(rightwing, 0F, 0F, 0F);
      headhair1 = new ModelRenderer(this, 60, 11);
      headhair1.addBox(-0.5F, -10F, -2.5F, 1, 2, 1);
      headhair1.setRotationPoint(0F, 14F, -3F);
      headhair1.setTextureSize(128, 128);
      headhair1.mirror = true;
      setRotation(headhair1, 0F, 0F, 0F);
      headhair2 = new ModelRenderer(this, 55, 8);
      headhair2.addBox(-0.5F, -11F, -1.5F, 1, 1, 1);
      headhair2.setRotationPoint(0F, 14F, -3F);
      headhair2.setTextureSize(128, 128);
      headhair2.mirror = true;
      setRotation(headhair2, 0F, 0F, 0F);
      headhair3 = new ModelRenderer(this, 47, 11);
      headhair3.addBox(-0.5F, -10F, 0F, 1, 2, 1);
      headhair3.setRotationPoint(0F, 14F, -3F);
      headhair3.setTextureSize(128, 128);
      headhair3.mirror = true;
      setRotation(headhair3, 0F, 0F, 0F);
      headhair4 = new ModelRenderer(this, 42, 8);
      headhair4.addBox(-0.5F, -11F, 1F, 1, 1, 1);
      headhair4.setRotationPoint(0F, 14F, -3F);
      headhair4.setTextureSize(128, 128);
      headhair4.mirror = true;
      setRotation(headhair4, 0F, 0F, 0F);
      headhair5 = new ModelRenderer(this, 43, 16);
      headhair5.addBox(-0.5F, -9F, 1F, 1, 1, 1);
      headhair5.setRotationPoint(0F, 14F, -3F);
      headhair5.setTextureSize(128, 128);
      headhair5.mirror = true;
      setRotation(headhair5, 0F, 0F, 0F);
      backhair1 = new ModelRenderer(this, 48, 100);
      backhair1.addBox(0F, 0F, 0F, 1, 1, 3);
      backhair1.setRotationPoint(-0.5F, 11F, 4F);
      backhair1.setTextureSize(128, 128);
      backhair1.mirror = true;
      setRotation(backhair1, 0F, 0F, 0F);
      backhair2 = new ModelRenderer(this, 52, 95);
      backhair2.addBox(0F, 0F, 0F, 1, 1, 1);
      backhair2.setRotationPoint(-0.5F, 10F, 4F);
      backhair2.setTextureSize(128, 128);
      backhair2.mirror = true;
      setRotation(backhair2, 0F, 0F, 0F);
      backhair3 = new ModelRenderer(this, 47, 92);
      backhair3.addBox(0F, 0F, 0F, 1, 1, 1);
      backhair3.setRotationPoint(-0.5F, 9F, 5F);
      backhair3.setTextureSize(128, 128);
      backhair3.mirror = true;
      setRotation(backhair3, 0F, 0F, 0F);
      backhair4 = new ModelRenderer(this, 40, 97);
      backhair4.addBox(0F, 0F, 0F, 1, 1, 1);
      backhair4.setRotationPoint(-0.4666667F, 10F, 7F);
      backhair4.setTextureSize(128, 128);
      backhair4.mirror = true;
      setRotation(backhair4, 0F, 0F, 0F);
      backhair5 = new ModelRenderer(this, 35, 94);
      backhair5.addBox(0F, 0F, 0F, 1, 1, 1);
      backhair5.setRotationPoint(-0.4666667F, 9F, 8F);
      backhair5.setTextureSize(128, 128);
      backhair5.mirror = true;
      setRotation(backhair5, 0F, 0F, 0F);
      leftwing1 = new ModelRenderer(this, 18, 50);
      leftwing1.addBox(-1F, 5F, -4F, 1, 3, 4);
      leftwing1.setRotationPoint(4F, 12F, 2F);
      leftwing1.setTextureSize(128, 128);
      leftwing1.mirror = true;
      setRotation(leftwing1, 0F, 0F, 0F);
      leftwing2 = new ModelRenderer(this, 18, 60);
      leftwing2.addBox(-1F, 6F, -3F, 1, 3, 4);
      leftwing2.setRotationPoint(4F, 12F, 2F);
      leftwing2.setTextureSize(128, 128);
      leftwing2.mirror = true;
      setRotation(leftwing2, 0F, 0F, 0F);
      leftwing3 = new ModelRenderer(this, 21, 69);
      leftwing3.addBox(-1F, 7F, 1F, 1, 2, 1);
      leftwing3.setRotationPoint(4F, 12F, 2F);
      leftwing3.setTextureSize(128, 128);
      leftwing3.mirror = true;
      setRotation(leftwing3, 0F, 0F, 0F);
      leftwing4 = new ModelRenderer(this, 21, 74);
      leftwing4.addBox(-1F, 8F, 2F, 1, 1, 1);
      leftwing4.setRotationPoint(4F, 12F, 2F);
      leftwing4.setTextureSize(128, 128);
      leftwing4.mirror = true;
      setRotation(leftwing4, 0F, 0F, 0F);
      rightwing1 = new ModelRenderer(this, 86, 50);
      rightwing1.addBox(0F, 5F, -4F, 1, 3, 4);
      rightwing1.setRotationPoint(-4F, 11.86667F, 2F);
      rightwing1.setTextureSize(128, 128);
      rightwing1.mirror = true;
      setRotation(rightwing1, 0F, 0F, 0F);
      rightwing2 = new ModelRenderer(this, 86, 60);
      rightwing2.addBox(0F, 6F, -3F, 1, 3, 4);
      rightwing2.setRotationPoint(-4F, 12F, 2F);
      rightwing2.setTextureSize(128, 128);
      rightwing2.mirror = true;
      setRotation(rightwing2, 0F, 0F, 0F);
      rightwing3 = new ModelRenderer(this, 89, 69);
      rightwing3.addBox(0F, 7F, 1F, 1, 2, 1);
      rightwing3.setRotationPoint(-4F, 12F, 2F);
      rightwing3.setTextureSize(128, 128);
      rightwing3.mirror = true;
      setRotation(rightwing3, 0F, 0F, 0F);
      rightwing4 = new ModelRenderer(this, 89, 74);
      rightwing4.addBox(0F, 8F, 2F, 1, 1, 1);
      rightwing4.setRotationPoint(-4F, 12F, 2F);
      rightwing4.setTextureSize(128, 128);
      rightwing4.mirror = true;
      setRotation(rightwing4, 0F, 0F, 0F);
      tooth1 = new ModelRenderer(this, 59, 21);
      tooth1.addBox(0.4F, -6F, -4.1F, 1, 1, 1);
      tooth1.setRotationPoint(0F, 14F, -3F);
      tooth1.setTextureSize(128, 128);
      tooth1.mirror = true;
      setRotation(tooth1, 0F, 0F, 0F);
      tooth2 = new ModelRenderer(this, 100, 25);
      tooth2.addBox(-2.1F, -6F, -3.9F, 1, 1, 1);
      tooth2.setRotationPoint(0F, 14F, -3F);
      tooth2.setTextureSize(128, 128);
      tooth2.mirror = true;
      setRotation(tooth2, 0F, 0F, 0F);
      tooth3 = new ModelRenderer(this, 59, 24);
      tooth3.addBox(-1.4F, -6F, -4.1F, 1, 1, 1);
      tooth3.setRotationPoint(0F, 14F, -3F);
      tooth3.setTextureSize(128, 128);
      tooth3.mirror = true;
      setRotation(tooth3, 0F, 0F, 0F);
      tooth4 = new ModelRenderer(this, 100, 20);
      tooth4.addBox(1.1F, -6F, -3.9F, 1, 1, 1);
      tooth4.setRotationPoint(0F, 14F, -3F);
      tooth4.setTextureSize(128, 128);
      tooth4.mirror = true;
      setRotation(tooth4, 0F, 0F, 0F);
  }
  
  public void render(Entity par1Entity, float par2, float par3, float par4, float par5, float par6, float par7)
  {
    super.render(par1Entity, par2, par3, par4, par5, par6, par7);
    setRotationAngles(par2, par3, par4, par5, par6, par7, par1Entity);
    body.render(par7);
    neck.render(par7);
    mouth.render(par7);
    mouth2.render(par7);
    cresta.render(par7);
    leftleg.render(par7);
    rightleg.render(par7);
    leftwing.render(par7);
    rightwing.render(par7);
    headhair1.render(par7);
    headhair2.render(par7);
    headhair3.render(par7);
    headhair4.render(par7);
    headhair5.render(par7);
    backhair1.render(par7);
    backhair2.render(par7);
    backhair3.render(par7);
    backhair4.render(par7);
    backhair5.render(par7);
    leftwing1.render(par7);
    leftwing2.render(par7);
    leftwing3.render(par7);
    leftwing4.render(par7);
    rightwing1.render(par7);
    rightwing2.render(par7);
    rightwing3.render(par7);
    rightwing4.render(par7);
    tooth1.render(par7);
    tooth2.render(par7);
    tooth3.render(par7);
    tooth4.render(par7);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float par1, float par2, float par3, float par4, float par5, float par6, Entity par7Entity)
  {
    super.setRotationAngles(par1, par2, par3, par4, par5, par6, par7Entity);
    this.neck.rotateAngleX = par5 / (180F / (float)Math.PI);
    this.neck.rotateAngleY = par4 / (180F / (float)Math.PI);
    this.cresta.rotateAngleX = this.neck.rotateAngleX;
    this.cresta.rotateAngleY = this.neck.rotateAngleY;
    this.mouth.rotateAngleX = this.neck.rotateAngleX;
    this.mouth.rotateAngleY = this.neck.rotateAngleY;
    this.mouth2.rotateAngleX = this.neck.rotateAngleX;
    this.mouth2.rotateAngleY = this.neck.rotateAngleY;
    this.rightleg.rotateAngleX = MathHelper.cos(par1 * 0.6662F) * 1.4F * par2;
    this.leftleg.rotateAngleX = MathHelper.cos(par1 * 0.6662F + (float)Math.PI) * 1.4F * par2;
    this.rightwing.rotateAngleZ = par3;
    this.leftwing.rotateAngleZ = -par3;
    this.rightwing1.rotateAngleZ = par3;
    this.leftwing1.rotateAngleZ = -par3;
    this.rightwing2.rotateAngleZ = par3;
    this.leftwing2.rotateAngleZ = -par3;
    this.rightwing3.rotateAngleZ = par3;
    this.leftwing3.rotateAngleZ = -par3;
    this.rightwing4.rotateAngleZ = par3;
    this.leftwing4.rotateAngleZ = -par3;
    this.headhair1.rotateAngleX = this.neck.rotateAngleX;
    this.headhair2.rotateAngleX = this.neck.rotateAngleX;
    this.headhair3.rotateAngleX = this.neck.rotateAngleX;
    this.headhair4.rotateAngleX = this.neck.rotateAngleX;
    this.headhair5.rotateAngleX = this.neck.rotateAngleX;
    this.headhair1.rotateAngleY = this.neck.rotateAngleY;
    this.headhair2.rotateAngleY = this.neck.rotateAngleY;
    this.headhair3.rotateAngleY = this.neck.rotateAngleY;
    this.headhair4.rotateAngleY = this.neck.rotateAngleY;
    this.headhair5.rotateAngleY = this.neck.rotateAngleY;
    this.tooth1.rotateAngleX = this.neck.rotateAngleX;
    this.tooth2.rotateAngleX = this.neck.rotateAngleX;
    this.tooth3.rotateAngleX = this.neck.rotateAngleX;
    this.tooth4.rotateAngleX = this.neck.rotateAngleX;
    this.tooth1.rotateAngleY = this.neck.rotateAngleY;
    this.tooth2.rotateAngleY = this.neck.rotateAngleY;
    this.tooth3.rotateAngleY = this.neck.rotateAngleY;
    this.tooth4.rotateAngleY = this.neck.rotateAngleY;
  }

}
